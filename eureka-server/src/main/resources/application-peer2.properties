server.port=1112
spring.application.name=eureka-server

#不登陆可以查看监控信息
management.security.enabled=false  

#是否优先使用IP地址作为主机名的标识
eureka.instance.prefer-ip-address=true
#Eureka客户端向服务端发送心跳的时间间隔
eureka.instance.lease-renewal-interval-in-seconds=30
#Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒。
# 超过该时间之后服务端会将该服务实例从服务清单中剔除，从而禁止服务调用请求被发送到该实例上
eureka.instance.lease-expiration-duration-in-seconds=60
#非安全的通讯端口号
eureka.instance.non-secure-port=80
#安全的通讯端口号
eureka.instance.secure-port=443
#是否启用非安全的通讯端口号
eureka.instance.non-secure-port-enabled=true
#是否启用安全的通讯端口号
eureka.instance.secure-port-enabled=false
#服务名，默认取spring.application.name的配置值，如果没有则为unknown
#eureka.instance.appname=unknown
#主机名，不配置的时候将根据操作系统的主机名来获取
eureka.instance.hostname=peer2

#用来关闭保护机制，以确保注册中心可以将不可用的实例正确剔除
eureka.server.enable-self-preservation=false

#将应用注册到对应的Eureka服务端中
eureka.client.serviceUrl.defaultZone=http://peer1:1111/eureka/
#启动Eureka客户端
eureka.client.enabled=true
#从Eureka服务端获取注册信息的间隔时间，单位为秒
eureka.client.registry-fetch-interval-seconds=30
#更新实例信息的变化到Eureka服务端的间隔，单位为秒
eureka.client.instance-info-replication-interval-seconds=30
#初始化实例信息到Eureka服务端的间隔时间，单位为秒
eureka.client.initial-instance-info-replication-interval-seconds=40
#轮询Eureka服务端地址更改的间隔时间，单位为秒
#当我们与Spring Cloud Config配合，动态刷新Eureka的serviceURL地址时需要关注该参数
eureka.client.eureka-service-url-poll-interval-seconds=300
#读取 Eureka Server 信息的超时时间，单位为秒
eureka.client.eureka-server-read-timeout-seconds=8
#连接 Eureka Server 的超时时间，单位为秒
eureka.client.eureka-server-connect-timeout-seconds=5
#从Eureka客户端到所有Eureka服务端的连接总数
eureka.client.eureka-server-total-connections=200
#从Eureka客户端到每个Eureka服务端主机的连接总数
eureka.client.eureka-server-total-connections-per-host=50
#Eureka服务端连接的空闲关闭时间
eureka.client.eureka-connection-idle-timeout-seconds=30
#心跳连接池的初始化线程数
eureka.client.heartbeat-executor-thread-pool-size=2
#心跳超时重试延迟时间的最大乘数值
eureka.client.heartbeat-executor-exponential-back-off-bound=10
#缓存刷新线程池的初始化线程数
eureka.client.cache-refresh-executor-thread-pool-size=2
#缓存刷新重试延迟时间的最大乘数值
eureka.client.cache-refresh-executor-exponential-back-off-bound=10
#使用DNS来获取Eureka服务端的serviceUrl
eureka.client.use-dns-for-fetching-service-urls=false
#是否要将自身的实例信息注册到Eureka服务端
eureka.client.register-with-eureka=true
#是否偏好使用处于相同Zone的Eureka服务端
eureka.client.prefer-same-zone-eureka=true
#获取实例时是否过滤，仅保留UP状态的实例
eureka.client.filter-only-up-instances=true
#是否从Eureka服务端获取注册信息
eureka.client.fetch-registry=true
